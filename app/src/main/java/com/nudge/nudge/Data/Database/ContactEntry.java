package com.nudge.nudge.Data.Database;

import android.arch.persistence.room.Entity;
import android.arch.persistence.room.Ignore;
import android.arch.persistence.room.Index;
import android.arch.persistence.room.PrimaryKey;
import android.arch.persistence.room.Room;

import com.google.firebase.firestore.ServerTimestamp;

import java.util.Date;

/**
 * Created by rushabh on 01/11/17.
 */
/**
 * Defines the schema of a table in {@link Room} for a single weather
 * forecast. The date is used as an {@link Index} so that its uniqueness can be ensured. Indexes
 * also allow for fast lookup for the column.
 */

@Entity(tableName = "contacts", indices = {@Index(value = {"contactId"}, unique = true)})
public class ContactEntry {

    /**
     * Makes sure the id is the primary key (ensures uniqueness), is auto generated by {@link Room}.
     */
    @PrimaryKey(autoGenerate = true)
    private int id;
    private String contactName;
    private long contactId;
    private String contactNumber;
    private int timesContacted;
    private long lastTimeContacted;
    private int starred;
    private String accountType;
    private Date timestamp;

    // Constructor used by Room to create Contact
    public ContactEntry(int id, String contactName, long contactId, String contactNumber, int timesContacted, long lastTimeContacted, int starred, String accountType, Date timestamp) {
        this.id = id;
        this.contactName = contactName;
        this.contactId = contactId;
        this.contactNumber = contactNumber;
        this.timesContacted = timesContacted;
        this.lastTimeContacted = lastTimeContacted;
        this.starred = starred;
        this.accountType = accountType;
        this.timestamp = timestamp;
    }

    public int getId() {
        return id;
    }

    public String getContactName() {
        return contactName;
    }

    public long getContactId() {
        return contactId;
    }

    public String getContactNumber() {
        return contactNumber;
    }

    public int getTimesContacted() {
        return timesContacted;
    }

    public long getLastTimeContacted() {
        return lastTimeContacted;
    }

    public int getStarred() {
        return starred;
    }

    public String getAccountType() {
        return accountType;
    }

    public Date getTimestamp() {
        return timestamp;
    }

}


